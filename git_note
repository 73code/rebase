初始化仓库： 
	git init
添加文件到仓库：
	git add <file> 可以添加多个文件
	git commit -m ""  批示内容 提交
工作区状态：
	git status
	git diff 如果git status 有提示警告 可以用git diff 查看修改的内容
HEAD 指向的版本就是当前的版本 git 允许我们在版本的历史之间穿梭
git reset --hard commit_id  
commit_id 可以利用git log 查看

git checkout -- file 丢弃工作区的修改
当添加到暂存区时 丢弃修改 git reset HEAD file  再git checkout -- file 丢弃工作区的修改

git pull origin master  //拉回
要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
git remote remove origin 取消关联


git push -u origin master 本地库推送到远程库上



查看分支 git branch
创建分支 git branch <name>
切换分支 git checkout <name>
创建+切换 git checkout -b <name>
合并某分支到某分支 git merge <name> name 合并到当前分支
git branch -d <name> 删除分支

git log --graph 分支合并图

git merge --no-ff -m "merge with no-ff" dev 在no-ff下合并下 从分支历史上可以看到分支信息


git stash 将当前的工作现场存储起来 等以后恢复工作
git stash list 存放的地方

git stash pop 恢复的同时将stash 的内容删除


git branch -D <name> 强制删除未合并的分支

git fetch origin master 取回远程更新

git checkout -b newBrach origin/master  远程创建新分支

git pull origin next:master 远程分支next 与本地master 合并

等同于git fetch origin git merge origin/next
















